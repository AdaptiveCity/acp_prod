---

- name: Install packages
  apt:
    update_cache: yes
    cache_valid_time: 3600
    name:
      - python3
      - python3-pip
      - python3-venv
      - postgresql
      - postgresql-contrib
      - postgis
      - python3-psycopg2
      - python-psycopg2     # For Ansible!
    state: present

- name: Upgrade pip3
  command: python3 -m pip install --upgrade pip
  changed_when: false

# Run as user postgres

- name: Tasks run as postgres
  block:

  - name: Create tfcweb database
    postgresql_db:
      name: tfcweb

  - name: Create tfc_prod user
    postgresql_user:
      name: tfc_prod

  - name: Set tfc_web's connection parameters
    command: psql
    args:
      stdin: |
        ALTER ROLE tfc_prod SET client_encoding TO 'utf8';
        ALTER ROLE tfc_prod SET timezone TO 'UTC';
        ALTER ROLE tfc_prod SET timezone TO 'UTC';
    changed_when: false

  - name: Grant tfc_prod access to tfcweb
    postgresql_privs:
      db: tfcweb
      privs: ALL
      type: database
      role: tfc_prod

  - name: Add postgis extension
    postgresql_ext:
      name: postgis
      db: tfcweb

  become: yes
  become_user: postgres

# Run as user tfc_prod

- name: Tasks run as tfc_prod
  block:

  - name: Create virtual env
    command: python3 -m venv tfc_web_venv
    args:
      chdir: ~tfc_prod
      creates: ~tfc_prod/tfc_web_venv

  - name: Install production secrets
    gpg_d:
      src: secrets.py.asc
      dest: ~tfc_prod/tfc_web/tfc_web/tfc_web/secrets.py
      owner: tfc_prod
      group: tfc_prod
      mode: "u=rw,go="

  - name: Snapshot the current tfc_web source
    git:
      repo: https://github.com/SmartCambridge/tfc_web
      dest: ~tfc_prod/tfc_web
      update: no
      register: git_checkout

  - name: Setup tfc_web only if checked out this time
    block:

    # Ansible's 'pip' module doesn't seem to work...
    - name: Install Python dependancies
      command: ~tfc_prod/tfc_web_venv/bin/pip install -r ~tfc_prod/tfc_web/tfc_web/requirements.txt
      changed_when: false

    - name: Run migrations
      command: ~tfc_prod/tfc_web_venv/bin/python manage.py migrate
      args:
        chdir: ~tfc_prod/tfc_web/tfc_web
      changed_when: false

    - name: Collect static files
      command: ~tfc_prod/tfc_web_venv/bin/python manage.py collectstatic --no-input
      args:
        chdir: ~tfc_prod/tfc_web/tfc_web
      register: command_result
      changed_when: command_result.stdout is search('Copying')

    - name: Setup the tfc_prod Django user
      command: ~tfc_prod/tfc_web_venv/bin/python manage.py setup_tfc_prod
      args:
        chdir: ~tfc_prod/tfc_web/tfc_web
      register: command_result
      changed_when: command_result.stdout is search('token created')

    - name: Start gunicorn
      comamnd: ~tfc_prod/tfc_web/run.sh
      changed_when: false

    when: git_checkout.changed

  - name: Route cron email somewhere useful
    cron:
      name: MAILTO
      env: yes
      value: admin@smartcambridge.org

  - name: Bus stop reload cronjob
    cron:
      name: reload bus stops
      state: present
      user: tfc_prod
      minute: 0
      hour: 3
      day: 1
      job: |
        cd /home/tfc_prod/tfc_web/tfc_web/ &&
        /home/tfc_prod/tfc_web_venv/bin/python
        /home/tfc_prod/tfc_web/tfc_web/manage.py update_bus_stops
        --settings="tfc_web.settings_production"
        >/var/log/tfc_prod/update_bus_stops.err 2>&1 &&
        echo $(date --iso-8601=seconds) > /var/log/tfc_prod/update_bus_stops.timestamp'

  - name: Bus timetable reload cronjob
    cron:
      name: reload bus timetable
      state: present
      user: tfc_prod
      minute: 0
      hour: 3
      weekday: wed
      job: |
        cd /home/tfc_prod/tfc_web/tfc_web/ &&
        /home/tfc_prod/tfc_web_venv/bin/python
        /home/tfc_prod/tfc_web/tfc_web/manage.py update_bus_info
        --settings="tfc_web.settings_production"
        >/var/log/tfc_prod/update_bus_info.err 2>&1
        && echo $(date --iso-8601=seconds) > /var/log/tfc_prod/update_bus_info.timestamp'

  - name: Session clearout cronjob
    cron:
      name: crearout sessions
      state: present
      user: tfc_prod
      minute: 0
      hour: 2
      weekday: tue
      job: |
        cd /home/tfc_prod/tfc_web/tfc_web/ &&
        /home/tfc_prod/tfc_web_venv/bin/python
        /home/tfc_prod/tfc_web/tfc_web/manage.py clearsessions --settings="tfc_web.settings_production"'

  become: yes
  become_user: tfc_prod
