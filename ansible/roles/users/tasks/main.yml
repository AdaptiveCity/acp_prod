---

- name: tfc_prod user
  user:
    name: tfc_prod
    comment: TFC production account
    state: present

- name: Admin users
  user:
    name: "{{ item }}"
    state: present
    groups: sudo
  loop: "{{ admin_users }}"

- name: Admin users .ssh directories
  file:
    path: /home/{{ item }}/.ssh
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "u=rwx,go="
  loop: "{{ admin_users }}"

- name: Find admin user 'mortal' authorized keys to copy
  local_action:
    module: stat
    path: "{{ role_path }}/files/{{ item }}_mortal.keys"
  loop: "{{ admin_users }}"
  register: st

- name: Install admin user 'mortal' authorized keys
  copy:
    src: "{{ item.stat.path }}"
    dest: ~{{ item.item }}/.ssh/authorized_keys
    owner: "{{ item.item }}"
    group: "{{ item.item }}"
    mode: "u=rw,go="
  loop: "{{ st.results }}"
  when: item.stat.exists

- name: Role account .ssh directories
  file:
    path: ~{{ item }}/.ssh
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "u=rwx,go="
  loop:
    - tfc_prod
    - root

- name: tfc_prod's private SSH key
  gpg_d:
    src: tfc_prod_id.asc
    dest: ~tfc_prod/.ssh/id_rsa
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rw,go="

- name: tfc_prod's public SSH key
  copy:
    src: tfc_prod_id.pub
    dest: ~tfc_prod/.ssh/id_rsa.pub
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rw,go="

- name: Install admin user + tfc_prod's mortal' keys into tfc_prod's authorized_keys
  assemble:
    remote_src: false
    src: "{{ role_path }}/files/"
    dest: ~tfc_prod/.ssh/authorized_keys
    regexp: "[a-z0-9_]+_mortal.keys"
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rw,go="

- name: Install admin user 'priv' keys into root authorized_keys
  assemble:
    remote_src: false
    src: "{{ role_path }}/files/"
    dest: ~root/.ssh/authorized_keys
    regexp: "[a-z0-9_]+_priv.keys"
    owner: root
    group: root
    mode: "u=rw,go="
