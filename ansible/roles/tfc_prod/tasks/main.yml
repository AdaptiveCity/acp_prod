---

- name: tfc_prod secrets file
  gpg_d:
    src: secrets.py.asc
    dest: ~tfc_prod/secrets.py
    owner: root
    group: root
    mode: "u=rw,go=r"

- name: Create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: tfc_prod
    group: tfc_prod
    mode: "{{ item.mode|default('u=rwx,go=rx') }}"
  loop:
    - { path: /var/log/tfc_prod, mode: "a=rwx" }
    - { path: /mnt/sdb1/tfc }

- name: Create tfc_prod data directories
  file:
    path: /mnt/sdb1/tfc/{{ item }}
    state: directory
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rwx,go=rx"
  loop:
    - vix
    #- vix/data_bin
    #- vix/data_bin_json
    #- vix/data_zone
    #- vix/data_cache
    #- vix/data_monitor
    #- vix/data_monitor_json
    - sys
    - cam_park_local
    - cam_park_rss
    - cam_aq

- name: Link tfc_prod data directories
  file:
    src: /mnt/sdb1/tfc
    path: /media/tfc
    state: link

- name: Copy data into tfc/sys
  synchronize:
    src: sys/
    dest: /media/tfc/sys/
    archive: no
    times: yes
    recursive: yes

- name: Install tfc_server startup script
  copy:
    src: tfc_server_run.sh
    dest: ~tfc_prod/run.sh
    owner: root
    group: root
    mode: "o=rwx,go=rx"

- name: Create database backup directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group|default(item.owner) }}"
    mode: "o=rwx,go=rx"
  loop:
    - { path: /backups, owner: postgres }
    - { path: /mnt/sdd1/smartcambridge.org/backup, owner: tfc_prod }

- name: Copy backup scripts
  copy:
    src: "{{ item }}"
    dest: /backups/{{ item }}
    owner: root
    group: root
    mode: "o=rwx,go=rx"
  loop:
    - rsync.sh
    - purge.sh

- name: Database dump cronjob
  cron:
    name: database dump create
    state: present
    user: postgres
    job: /usr/bin/pg_dumpall --clean | /bin/bzip2 > "/backups/database.$(date +\%Y.\%m.\%d).pgdumpall.bz2"
    hour: 1
    minute: 0

- name: Database dump purge cronjob
  cron:
    name: database dump purge
    state: present
    user: root
    job: /backups/purge.sh /backups >/var/log/tfc_prod/backup_purge.log 2>&1 && echo $(date --iso-8601=seconds) > /var/log/tfc_prod/backup_purge.timestamp
    hour: 5
    minute: 55

- name: Production database dump copy cronjob
  cron:
    name: production database dump copy
    state: present
    user: tfc_prod
    job: /backups/rsync.sh /mnt/sdd1/smartcambridge.org/backups/
    hour: 5
    minute: "{{ 59 | random(seed=inventory_hostname) }}"

- name: Start tfc_web/tfc_prod on reboot
  cron:
    name: Restart {{ item }}
    state: present
    user: tfc_prod
    job: "[ -e {{ item }} ] && {{ item }}"
    special_time: reboot
  loop:
    - /home/tfc_prod/tfc_prod/run.sh
    - /home/tfc_prod/tfc_web/run.sh

