---

- name: tfc_prod user
  user:
    name: tfc_prod
    comment: TFC production account
    system: yes
    shell: /bin/bash
    state: present

- name: tfc_prod .ssh directory
  file:
    path: ~tfc_prod/.ssh
    state: directory
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rwx,go="

- name: tfc_prod's private SSH key
  gpg_d:
    src: tfc_prod_id.asc
    dest: ~tfc_prod/.ssh/id_rsa
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rw,go="

- name: tfc_prod's public SSH key
  copy:
    src: tfc_prod_id.pub
    dest: ~tfc_prod/.ssh/id_rsa.pub
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rw,go="

# Keys are kept in the `users` role
- name: Install admin user + tfc_prod's mortal keys into tfc_prod's authorized_keys
  assemble:
    remote_src: false
    src: "{{ role_path }}/../users/files/mortal_keys"
    dest: ~tfc_prod/.ssh/authorized_keys
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rw,go="

- name: Misc tfc_prod tools
  copy:
    src: tools
    dest: ~tfc_prod/tfc_prod/
    owner: tfc_prod
    group: tfc_prod
    mode: "o=rwx,go=rx"

- name: Log directory
  file:
    path: /var/log/tfc_prod
    state: directory
    owner: tfc_prod
    group: tfc_prod
    mode: "a=rwx"

- name: ~tfc_prod/tfc_prod directory
  file:
    path: ~tfc_prod/tfc_prod
    state: directory
    owner: tfc_prod
    group: tfc_prod
    mode: "u=rwx,go=rx"

- name: tfc_prod secrets file
  gpg_d:
    src: secrets.sh.asc
    dest: ~tfc_prod/tfc_prod/secrets.sh
    owner: root
    group: root
    mode: "u=rw,go=r"

- name: Database backup directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group|default(item.owner) }}"
    mode: "o=rwx,go=rx"
  loop:
    - { path: /backups, owner: postgres }
    - { path: /mnt/sdd1/smartcambridge.org/backup, owner: tfc_prod }
  loop_control:
    label: "{{ item.path }}"

- name: Backup scripts
  copy:
    src: "{{ item }}"
    dest: /backups/{{ item }}
    owner: root
    group: root
    mode: "o=rwx,go=rx"
  loop:
    - rsync.sh
    - purge.sh

- name: Database dump cronjob
  cron:
    name: database dump create
    state: present
    user: postgres
    job: /usr/bin/pg_dumpall --clean | /bin/bzip2 > "/backups/database.$(date +\%Y.\%m.\%d).pgdumpall.bz2"
    hour: 1
    minute: 0

- name: Database dump purge cronjob
  cron:
    name: database dump purge
    state: present
    user: root
    job: /backups/purge.sh /backups >/var/log/tfc_prod/backup_purge.log 2>&1 && echo $(date --iso-8601=seconds) > /var/log/tfc_prod/backup_purge.timestamp
    hour: 5
    minute: 55

- name: Production database dump copy cronjob
  cron:
    name: production database dump copy
    state: present
    user: tfc_prod
    job: /backups/rsync.sh /mnt/sdd1/smartcambridge.org/backups/
    hour: 5
    minute: "{{ 59 | random(seed=inventory_hostname) }}"


